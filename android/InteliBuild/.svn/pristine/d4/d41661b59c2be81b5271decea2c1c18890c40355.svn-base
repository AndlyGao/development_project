package com.bibinet.intelibuild.project.view.base;

import android.content.Context;
import android.content.Intent;
import android.graphics.Color;
import android.os.Build;
import android.os.Bundle;
import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import android.support.v4.app.ActivityCompat;
import android.support.v4.app.FragmentActivity;
import android.view.View;
import android.view.Window;
import android.view.WindowManager;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import com.bibinet.intelibuild.R;
import com.bibinet.intelibuild.project.manager.PermissionManager;
import com.bibinet.intelibuild.project.util.ApiUtils;

import java.util.List;

import butterknife.ButterKnife;

import static com.bibinet.intelibuild.project.util.ObjectUtils.isNull;

/**
 * Created by bibinet on 2017-11-4.
 */

public abstract class BaseActivity extends FragmentActivity implements PermissionManager.OnPermissionManagerListener {

    @Override
    protected final void onCreate(@Nullable Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        permissionsManager = new PermissionManager(this, this);
        initStateBarTransparent();
        View view = getLayoutView();
        if(view==null){
            setContentView(getLayoutId());
        }else{
            setContentView(view);
        }

        ButterKnife.bind(this);
        onBaseCreate(savedInstanceState);
    }

    //初始化透明状态栏
    public void initStateBarTransparent() {
        Window window = getWindow();
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) { // 5.0 以上全透明状态栏
            //取消设置透明状态栏,使 ContentView 内容不再覆盖状态栏 加下面几句可以去除透明状态栏的灰色阴影,实现纯透明
            window.clearFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);
            //需要设置这个 flag 才能调用 setStatusBarColor 来设置状态栏颜色
            window.addFlags(WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS);
            window.getDecorView().setSystemUiVisibility(
                    View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN);
            //6.0 以上可以设置状态栏的字体为黑色.使用下面注释的这行打开亮色状态栏模式,实现黑色字体,白底的需求用这句setStatusBarColor(Color.WHITE);
//            window.getDecorView().setSystemUiVisibility(
//                    View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN | View.SYSTEM_UI_FLAG_LIGHT_STATUS_BAR);
            window.setStatusBarColor(Color.TRANSPARENT);

        }else if(Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT){//4.4 全透明状态栏
            window.addFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);
        }
    }

    protected View getLayoutView() {
        return null;
    }

    protected abstract void onBaseCreate(Bundle savedInstanceState);

    protected abstract int getLayoutId();

    @Override
    public void startActivity(Intent intent) {
        super.startActivity(intent);
        overridePendingTransition(R.anim.tr_entry, R.anim.tr_void);
    }

    @Override
    public void finish() {
        super.finish();
        overridePendingTransition(R.anim.tr_void, R.anim.tr_exit);
    }

    protected PermissionManager permissionsManager;

    @Override
    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {
        super.onRequestPermissionsResult(requestCode, permissions, grantResults);
        permissionsManager.onRequestPermissionsResult(requestCode, permissions, grantResults);
    }


    @Override
    public void onRequestPermissionSuccess(int requestCode, int pageId) {

    }

    @Override
    public void onRequestPermissionFail(int requestCode, int pageId) {

    }

    protected void setTextView(TextView textView, String value){
        if(textView!=null && !isNull(value)){
            textView.setText(value);
        }else{
            textView.setText("");
        }
    }

}
