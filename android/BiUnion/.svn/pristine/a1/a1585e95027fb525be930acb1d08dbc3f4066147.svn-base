package com.bibinet.biunion.project.ui.activity;

import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import com.andview.refreshview.XRefreshView;
import com.andview.refreshview.listener.OnBottomLoadMoreTime;
import com.andview.refreshview.listener.OnTopRefreshTime;
import com.bibinet.biunion.R;
import com.bibinet.biunion.project.adapter.MoreProjectAdapter;
import com.bibinet.biunion.project.bean.InformationBean;
import static com.bibinet.biunion.project.config.InformationConfig.*;
import com.bibinet.biunion.project.bean.TypeFilterBean;
import com.bibinet.biunion.project.models.DailyUpdatesModel;
import com.bibinet.biunion.project.models.InformationItemsModel;
import com.bibinet.biunion.project.models.InformationModel;
import com.bibinet.biunion.project.net.emit.DailyUpdatesCountEmit;
import com.bibinet.biunion.project.net.emit.MoreProjectEmit;
import com.bibinet.biunion.project.net.firing.DailyUpdatesCountFiring;
import com.bibinet.biunion.project.net.firing.MoreProjectFiring;
import com.bibinet.biunion.project.ui.config.MoreProjectConfig;
import com.bibinet.biunion.project.ui.custom.HomeHeaderView;
import com.bibinet.biunion.project.ui.custom.RefreshHeaderView;
import com.bibinet.biunion.project.ui.expand.PageActivity;
import com.bibinet.biunion.project.ui.expand.PageActivityAdapter;
import com.bibinet.biunion.project.ui.manager.TypeFilterManager;
import com.bibinet.biunion.project.utils.DateFormatUtils;
import com.umeng.analytics.MobclickAgent;
import java.io.Serializable;
import java.util.List;
import butterknife.BindView;
import butterknife.OnClick;

/**
 * Created by bibinet on 2017-6-7.
 */

public class MoreProjectActivity extends PageActivity<InformationItemsModel> implements MoreProjectEmit, OnBottomLoadMoreTime, XRefreshView.XRefreshViewListener, OnTopRefreshTime, DailyUpdatesCountEmit, TypeFilterManager.OnSelectBackListener {

    @BindView(R.id.projectIndustry)
    LinearLayout projectIndustry;
    @BindView(R.id.projectAeara)
    LinearLayout projectAeara;
    @BindView(R.id.projectTime)
    LinearLayout projectTime;

    @BindView(R.id.act_more_not_data)
    View notDataV;

    @BindView(R.id.v_type_filter)
    View filterV;

    private HomeHeaderView headerView;

    private MoreProjectFiring moreProjectFiring;
    private DailyUpdatesCountFiring dailyUpdatesCountFiring;

    private String location;

    private String dCount = "加载中...";
    private InformationBean informationBean;

    private String industryKey, areaKey, timeKey;
    private TypeFilterManager typeFilterManager;

    public static void start(Context context, InformationBean bean, String location) {
        Intent intentMore = new Intent(context, MoreProjectActivity.class);
        intentMore.putExtra("information", (Serializable) bean);
        intentMore.putExtra("location", location);
        context.startActivity(intentMore);
    }

    @Override
    protected int getNotDataViewId() {
        return R.id.act_more_not_data;
    }

    @Override
    protected PageActivityAdapter getPageAdapter(List<InformationItemsModel> dataList) {
        return new MoreProjectAdapter(this, dataList, informationBean);
    }

    @Override
    protected void initLoad(int pageNumb) {
        loadData(pageNumb);
    }

    @Override
    protected void onPageCreate(Bundle savedInstanceState) {
        initView();
    }

    @Override
    protected int getRecyclerViewId() {
        return R.id.act_more_recycler;
    }

    @Override
    protected int getPageLayoutId() {
        return R.layout.activity_more;
    }

    @Override
    protected void nextPageLoad(int pageNumb) {
        loadData(pageNumb);
    }

    @Override
    protected void refreshLoad(int pageNumb) {
        loadData(pageNumb);
    }

    private void initView() {
        Intent intent = getIntent();
        location = intent.getStringExtra("location");
        informationBean = (InformationBean) intent.getSerializableExtra("information");
        List<TypeFilterBean> beanList = new MoreProjectConfig().getTypeFilterBeanList();
        typeFilterManager = new TypeFilterManager(this, filterV, beanList, this);
        typeFilterManager.init();

        industryKey = beanList.get(typeFilterManager.TYPE_POS0).getKey();
        if (location != null && !location.equals("")) {
            beanList.get(typeFilterManager.TYPE_POS1).setKey(location);
        }
        areaKey = beanList.get(typeFilterManager.TYPE_POS1).getKey();
        timeKey = beanList.get(typeFilterManager.TYPE_POS2).getKey();

        if (informationBean.getId() == ICT_TENDER_RM) {
            headerView.setSecondary(false);
        } else {
            headerView.setSecondary(true);
        }
        headerView.setAssist(informationBean.getRefreshAssist());
        setTitleString(informationBean.getTitle());
        moreProjectFiring = new MoreProjectFiring(this);
        dailyUpdatesCountFiring = new DailyUpdatesCountFiring(this);
    }

    //首页过来之后进行数据加载
    private void loadData(int pageNumb) {
        Log.e("req", "0=" + industryKey + "-1=" + areaKey + "-2=" + timeKey);
        doSelect(timeKey, industryKey, areaKey, pageNumb);
        //每日更新量请求
        dailyUpdatesCountFiring.getPartCount(informationBean.getDailyUpdatesCountP(), getDate());
    }

    private void doSelect(String time, String industry, String area, int pageNumb) {
        int id = informationBean.getParentId();
        switch (id) {
            case ICT_PROJECT:
                moreProjectFiring.getMoreProjectInfo(pageNumb, informationBean.getRequestDataP(), time, industry, area);
                break;
            case ICT_PROJECT_PP:
                moreProjectFiring.getMorePpProjectInfo(pageNumb, time, industry, area);
                break;
            case ICT_TENDER:
                moreProjectFiring.getMoreTenderInfo(pageNumb, informationBean.getRequestDataP(), time, industry, area);
                break;
            case ICT_PRUCHASE:
                moreProjectFiring.getMorePurchaseInfo(pageNumb, informationBean.getRequestDataP(), time, industry, area);
                break;
        }
    }

    private String getDate() {
        return DateFormatUtils.format(System.currentTimeMillis(), "yyyy-MM-dd");
    }

    //获取每日更新量
    @Override
    public void onGetCountSuccess(DailyUpdatesModel model) {
        dCount = model.getCount();
        if (headerView != null) {
            headerView.setCount(dCount);
        }
    }

    @Override
    public void onGetCountFail(String error) {

    }

    @Override
    protected void onResume() {
        super.onResume();
        MobclickAgent.onPageStart("MorePrejectActivity");
        MobclickAgent.onResume(this);
    }

    @Override
    protected void onPause() {
        super.onPause();
        MobclickAgent.onPageEnd("MorePrejectActivity");
        MobclickAgent.onPause(this);
    }

    @Override
    public void select(String key0, String key1, String key2) {
        Log.e("resjijdi", "key0=" + key0 + "-key1=" + key1 + "-key2=" + key2);
        industryKey = key0;
        areaKey = key1;
        timeKey = key2;
        initRefresh();
    }

    @Override
    protected int getXRefreshLayoutId() {
        return R.id.act_more_project_xrefresh;
    }

    @Override
    protected RefreshHeaderView getHeadView() {
        if (headerView == null) {
            headerView = HomeHeaderView.getInstance(this).getLayoutView();
            headerView.init();
            headerView.setCount(dCount);
        }
        return headerView;
    }

    @Override
    protected int getTitleString() {
        return 0;
    }
}
