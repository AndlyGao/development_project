package com.bibinet.biunion.project.ui.activity;

import android.content.Intent;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.text.TextUtils;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;

import com.bibinet.biunion.R;
import com.bibinet.biunion.project.application.Constants;
import com.bibinet.biunion.project.bean.ForgetPasswordBean;
import com.bibinet.biunion.project.net.emit.PasswordForgetEmit;
import com.bibinet.biunion.project.net.firing.PasswordFiring;
import com.bibinet.biunion.project.ui.expand.TitleActivity;
import com.bibinet.biunion.project.utils.PhoneNumberUtils;
import com.bibinet.biunion.project.utils.TimeUtils;
import com.bibinet.biunion.project.utils.ToastUtils;
import com.bibinet.biunion.project.utils.ViewCheckUtils;
import com.bibinet.biunion.project.utils.cityselectutil.SharedPreferencesUtils;

import butterknife.BindView;
import butterknife.OnClick;

/**
 * Created by bibinet on 2017-6-5.
 */

public class PasswordForgetActivity extends TitleActivity implements TimeUtils.OnTimeUtilsListener, PasswordForgetEmit {
    private final long AGAINSENDTIME = 60 * 1000;
    @BindView(R.id.act_password_forget_phone)
    EditText phoneET;
    @BindView(R.id.act_password_forget_code)
    EditText codeET;
    @BindView(R.id.act_password_forget_get_code)
    TextView getCodeTV;
    @BindView(R.id.act_password_forget_confirm)
    Button confirmB;

    private TimeUtils timeUtils;
    private PasswordFiring passwordFiring;

    //得到验证码
    @OnClick(R.id.act_password_forget_get_code)
    void getCode() {
        String phone = phoneET.getText().toString().trim();
        if (PhoneNumberUtils.isMobileNumber(phone)) {
            startCountDown();
            passwordFiring.getPasswordForgetCode(phone);
        } else {
            Toast.makeText(this, "请输入正确的手机号", Toast.LENGTH_SHORT).show();
        }
    }

    private void startCountDown() {
        //保存一段时间后的时间点
        long time = System.currentTimeMillis() + AGAINSENDTIME;
        SharedPreferencesUtils.getInstence().setCheckCodeAgainSendTime(this, time);
        //启动倒计时
        timeUtils.startCountDownTime(AGAINSENDTIME, 1000, this);
    }

    @Override
    protected void onTitleCreate(@Nullable Bundle savedInstanceState) {
        initView();
        timeUtils = new TimeUtils();
        //检测倒计时
        checkCountDown();
        ViewCheckUtils.inputConfirm(confirmB, phoneET, codeET);
        ViewCheckUtils.getCodeCheck(getCodeTV, phoneET);
    }

    @Override
    protected int getTitleString() {
        return R.string.str_password_forget;
    }

    @Override
    protected int getTitleLayoutId() {
        return R.layout.activity_password_forget;
    }

    private void checkCountDown() {
        long historyTime = SharedPreferencesUtils.getInstence().getCheckCodeAgainSendTime(this);
        long currentTime = System.currentTimeMillis();
        if (currentTime < historyTime) {
            long time = historyTime - currentTime;
            timeUtils.startCountDownTime(time, 1000, this);
            getCodeTV.setEnabled(false);
        } else {
            getCodeTV.setEnabled(true);
        }
    }

    private boolean checkLogin() {
        if (Constants.loginresultInfo != null && Constants.loginresultInfo.getUser() != null && Constants.loginresultInfo.getUser().getUserId() != null && !Constants.loginresultInfo.getUser().getUserId().equals("")) {
            return true;
        }
        return false;
    }

    private void initView() {
        passwordFiring = new PasswordFiring(this);
    }

    @OnClick(R.id.act_password_forget_confirm)
    void confirm() {
        String phoneNumb = phoneET.getText().toString().trim();
        String VerifCode = codeET.getText().toString().trim();
        if (TextUtils.isEmpty(VerifCode)) {
            Toast.makeText(this, "验证码为空", Toast.LENGTH_SHORT).show();
        } else if (!PhoneNumberUtils.isMobileNumber(phoneNumb)) {
            Toast.makeText(this, "手机号格式不正确", Toast.LENGTH_SHORT).show();
        } else {
            passwordFiring.checkPasswordForgetCode(phoneET.getText().toString().trim(), codeET.getText().toString().trim());
        }

    }

    @Override
    public void onTick(long millisUntilFinished) {
        getCodeTV.setText("（" + (millisUntilFinished / 1000) + "）秒后可重发");
        getCodeTV.setEnabled(false);
    }

    @Override
    public void onFinish() {
        getCodeTV.setText("重新发送");
        getCodeTV.setEnabled(true);
    }


    @Override
    public void onCheckPasswordForgetCodeSuccess(ForgetPasswordBean forgetInfo) {
        if (forgetInfo.getResCode().equals("0000")) {
            String phone = phoneET.getText().toString().trim();
            Intent intent = new Intent(this, PasswordForgetConfirmActivity.class);
            intent.putExtra("cellphone", phone);
            startActivityForResult(intent, PasswordForgetConfirmActivity.REQUEST_CODE);
        } else {
            ToastUtils.showShort(forgetInfo.getResMessage());
        }
    }

    @Override
    public void onCheckPasswordForgetCodeFail(String error) {
        ToastUtils.showShort(error);
    }

    @Override
    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        super.onActivityResult(requestCode, resultCode, data);
        if (requestCode == PasswordForgetConfirmActivity.REQUEST_CODE && resultCode == PasswordForgetConfirmActivity.RESULE_CODE) {
            finish();
        }
    }
}
