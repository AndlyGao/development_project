package com.bibinet.biunion.project.ui.activity;

import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.support.v4.app.FragmentManager;
import android.support.v4.app.FragmentPagerAdapter;
import android.support.v4.view.ViewPager;
import android.view.View;
import android.widget.TextView;

import com.bibinet.biunion.R;
import com.bibinet.biunion.project.dao.MediaVideoData;
import com.bibinet.biunion.project.event.MediaVideoStudyEvent;
import com.bibinet.biunion.project.models.MediaVideoChildModel;
import com.bibinet.biunion.project.models.MediaVideoDetailSectionModel;
import com.bibinet.biunion.project.net.UrlConfig;
import com.bibinet.biunion.project.onekeyshare.OnekeyShare;
import com.bibinet.biunion.project.ui.custom.AdaptImageView;
import com.bibinet.biunion.project.ui.custom.MoveLineView;
import com.bibinet.biunion.project.ui.expand.TitleActivity;
import com.bibinet.biunion.project.ui.fragment.MediaVideoDetailIntroFragment;
import com.bibinet.biunion.project.ui.fragment.MediaVideoDetailListFragment;
import com.bibinet.biunion.project.ui.fragment.MediaVideoDetailSummaryFragment;
import com.bibinet.biunion.project.utils.GlideHelper;
import com.bibinet.biunion.project.utils.ScreenShotUtils;
import com.bibinet.biunion.project.utils.ShareUtils;
import com.bumptech.glide.request.RequestOptions;
import com.umeng.analytics.MobclickAgent;

import org.greenrobot.eventbus.EventBus;
import org.greenrobot.eventbus.Subscribe;

import java.util.ArrayList;
import java.util.List;

import butterknife.BindView;
import butterknife.BindViews;
import butterknife.OnClick;


/**
 * Created by bibinet on 2017-6-15.
 */

public class MediaVideoDetailActivity extends TitleActivity implements ViewPager.OnPageChangeListener {
    private final static String DATA = "DATA";
    private final static String VIDEO_DATA = "video_data";

    private int TYPE_COUNT = 3;
    private int TYPE_INTRO = 0;
    private int TYPE_LIST = 1;
    private int TYPE_SUMMARY = 2;

    @BindView(R.id.act_media_video_detail_study_tv)
    TextView studyTv;
    @BindView(R.id.act_media_video_detail_start_study_tv)
    TextView startStudyTv;

    @BindView(R.id.act_media_video_detail_main)
    ViewPager mainVP;

    @BindView(R.id.act_media_video_detail_img)
    AdaptImageView imgAIV;

    @BindView(R.id.act_media_video_detail_mask)
    AdaptImageView maskAIV;

    @BindView(R.id.act_media_video_detail_line)
    MoveLineView moveLineView;

    @BindViews({R.id.act_media_video_detail_title_intro, R.id.act_media_video_detail_title_list, R.id.act_media_video_detail_title_summary})
    TextView [] tabTV;

    private List<Fragment> fragmentList;
    private RequestOptions options;
    private MediaVideoDetailSectionModel mediaVideoDetailSectionModel;
    private MediaVideoDetailListFragment detailListFragment;
    // 封面地址
    private String coverUrl;
    private String mShareUrl;

    @Override
    protected void onTitleCreate(Bundle savedInstanceState) {
        options = GlideHelper.getInst().getMediaVideoOptions();
        mediaVideoChildModel = (MediaVideoChildModel) getIntent().getSerializableExtra(DATA);
        mediaVideoDetailSectionModel = (MediaVideoDetailSectionModel) getIntent().getSerializableExtra(VIDEO_DATA);
        StringBuffer studyContent = new StringBuffer();
        if (mediaVideoDetailSectionModel != null) {
            studyContent.append("学习到").append(mediaVideoDetailSectionModel.getHourNo()).append(mediaVideoDetailSectionModel.getHourName()).
                    append("  ").append(mediaVideoDetailSectionModel.getStudyTime());
        } else {
            studyContent.append("还没有开始学习");
        }
        studyTv.setText(studyContent.toString());

        imgAIV.setInitImage(R.mipmap.img_media_video_loading);
        maskAIV.setInitImage(R.mipmap.img_media_video_loading);
        moveLineView.setCount(3);
        fragmentList = new ArrayList<Fragment>();
        detailListFragment = new MediaVideoDetailListFragment().setData(mediaVideoChildModel, mediaVideoDetailSectionModel, new MediaVideoDetailListFragment.ShareUrlCallback() {
            @Override
            public void success(String url) {
                mShareUrl = url;
                //分享
                setRightBtn(0, R.mipmap.img_share_icon, 1, new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        ShareUtils.showShareDialog(MediaVideoDetailActivity.this, mShareUrl,
                                mediaVideoChildModel.getCourseName(), coverUrl);
                    }
                });
            }
        });
        fragmentList.add(new MediaVideoDetailIntroFragment().setData(mediaVideoChildModel));
        fragmentList.add(detailListFragment);
        fragmentList.add(new MediaVideoDetailSummaryFragment().setData(mediaVideoChildModel));
        mainVP.setOffscreenPageLimit(3);
        mainVP.setAdapter(new MediaDetailAdapter(getSupportFragmentManager()));
        mainVP.setOnPageChangeListener(this);
        coverUrl = UrlConfig.getBaseUrl(UrlConfig.TYPE_IIP) + mediaVideoChildModel.getCourseCover();
        GlideHelper.getInst().loadImageWithPlace(this,coverUrl, options, imgAIV);
        EventBus.getDefault().register(this);
    }

    @OnClick({R.id.act_media_video_detail_title_intro, R.id.act_media_video_detail_title_list, R.id.act_media_video_detail_title_summary,R.id.act_media_video_detail_start_study_tv})
    void titleOnClick(View v){
        switch (v.getId()){
            case R.id.act_media_video_detail_title_intro:
                mainVP.setCurrentItem(TYPE_INTRO);
                break;
            case R.id.act_media_video_detail_title_list:
                mainVP.setCurrentItem(TYPE_LIST);
                break;
            case R.id.act_media_video_detail_title_summary:
                mainVP.setCurrentItem(TYPE_SUMMARY);
                break;
                case R.id.act_media_video_detail_start_study_tv:
                startStudy();
                break;
        }
    }

    private void startStudy() {
        if (detailListFragment == null) {
            return;
        }
        if (mediaVideoDetailSectionModel == null) {
            mediaVideoDetailSectionModel = detailListFragment.getSection();
        }
        if (mediaVideoDetailSectionModel == null) {
            return;
        }
        MediaVideoPlayActivity.start(this, mediaVideoChildModel, mediaVideoDetailSectionModel);
    }


    @Override
    protected int getTitleLayoutId() {
        return R.layout.activity_media_video_detail;
    }

    @Override
    protected int getTitleString() {
        return R.string.str_media_video_detail;
    }

    @Subscribe
    public void onMainEventBus(MediaVideoStudyEvent event) {
        if (event == null) {
            return;
        }

        MediaVideoData videoData = event.getVideoData();
        if (mediaVideoDetailSectionModel == null) {
            mediaVideoDetailSectionModel = new MediaVideoDetailSectionModel();
        }
        mediaVideoDetailSectionModel.setVideo(videoData.getVideo());
        mediaVideoDetailSectionModel.setSectionCode(videoData.getSectionCode());
        mediaVideoDetailSectionModel.setHourName(videoData.getHourName());
        mediaVideoDetailSectionModel.setHourNo(videoData.getHourNo());
        mediaVideoDetailSectionModel.setStudyTime(videoData.getStudyTime());
        StringBuffer studyContent = new StringBuffer();
        if (videoData != null) {
            studyContent.append("学习到").append(videoData.getHourNo()).append(videoData.getHourName()).
                    append("  ").append(videoData.getStudyTime());
            studyTv.setText(studyContent.toString());
            if (detailListFragment == null) {
                return;
            }
            detailListFragment.updateStudyState(videoData.getHourNo());
        }

    }

    @Override
    protected void onResume() {
        super.onResume();
        MobclickAgent.onPageStart("MediaVideoDetailActivity");
        MobclickAgent.onResume(this);
    }

    @Override
    protected void onPause() {
        super.onPause();
        MobclickAgent.onPageEnd("MediaVideoDetailActivity");
        MobclickAgent.onPause(this);
    }

    @Override
    protected void onDestroy() {
        super.onDestroy();
        EventBus.getDefault().unregister(this);
    }

    @Override
    public void onPageScrolled(int position, float positionOffset, int positionOffsetPixels) {

    }

    @Override
    public void onPageSelected(int position) {
        moveLineView.setCurrentPos(position + 1);
        for(int i=0 ; i<tabTV.length ; i++){
            if(position == i){
                tabTV[i].setTextColor(getResources().getColor(R.color.col_title_background));
            }else{
                tabTV[i].setTextColor(getResources().getColor(R.color.color_666666));
            }
        }
    }

    @Override
    public void onPageScrollStateChanged(int state) {

    }

    private MediaVideoChildModel mediaVideoChildModel;
    public static void start(Context context, MediaVideoChildModel mediaVideoChildModel, MediaVideoDetailSectionModel videoData){
        Intent intent = new Intent(context, MediaVideoDetailActivity.class);
        intent.putExtra(DATA, mediaVideoChildModel);
        if (videoData != null) {
            intent.putExtra(VIDEO_DATA, videoData);
        }
        context.startActivity(intent);
    }

    private class MediaDetailAdapter extends FragmentPagerAdapter {

        public MediaDetailAdapter(FragmentManager fm) {
            super(fm);
        }

        @Override
        public Fragment getItem(int position) {
            return fragmentList.get(position);
        }

        @Override
        public int getCount() {
            return TYPE_COUNT;
        }
    }
}
