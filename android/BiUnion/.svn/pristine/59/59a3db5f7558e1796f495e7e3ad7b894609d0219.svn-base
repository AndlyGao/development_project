package com.bibinet.biunion.project.ui.activity;

import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.view.View;
import android.webkit.WebView;
import android.widget.Toast;

import com.bibinet.biunion.R;
import com.bibinet.biunion.project.application.Constants;
import com.bibinet.biunion.project.bean.InformationBean;
import com.bibinet.biunion.project.event.LoginSuccessEvent;
import com.bibinet.biunion.project.models.BaseModel;
import com.bibinet.biunion.project.models.CollectResultModel;
import com.bibinet.biunion.project.models.InformationItemsModel;
import com.bibinet.biunion.project.net.UrlConfig;
import com.bibinet.biunion.project.net.emit.InformationDetailEmit;
import com.bibinet.biunion.project.net.firing.MyFiring;
import com.bibinet.biunion.project.ui.expand.WebViewActivity;
import com.bibinet.biunion.project.utils.ShareUtils;
import com.bibinet.biunion.project.utils.StatisticsUtils;
import com.bibinet.biunion.project.utils.ToastUtils;

import org.greenrobot.eventbus.EventBus;
import org.greenrobot.eventbus.Subscribe;

/**
 * Created by bibinet on 2017-6-10.
 */

public class InformationDetailActivity extends WebViewActivity implements InformationDetailEmit {


    private final static String DATA = "DATA";
    private final int TYPE_TENDER = 1;
    private final int TYPE_PROJECT = 2;
    private final int TYPE_PPP = 3;
    private final int TYPE_PURCHASE = 4;

    WebView webview;

    private MyFiring myFiring;
    private String projectCode;
    private String projectName;
    private String titleStr;
    private String collectType;
    private String objectId;
    private UrlConfig urlConfig;

    private InformationBean informationBean;

    private String shareUrl;
    private boolean isUpdate;

    public static void start(Context context, InformationItemsModel data) {
        Intent intent = new Intent(context, InformationDetailActivity.class);
        intent.putExtra(DATA, data);
        context.startActivity(intent);
    }

    @Override
    protected void onWebCreate(Bundle savedInstanceState) {
        //分享
        setRightBtn(0, R.mipmap.img_share_icon, 1, new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ShareUtils.showShareDialog(InformationDetailActivity.this, shareUrl, projectName, null);
            }
        });
        //收藏
        setRightSecondBtn(0, R.drawable.select_collect_icon, new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                collect();
            }
        });
        initView();
        EventBus.getDefault().register(this);
    }

    @Override
    protected int getWebViewId() {
        return R.id.webview;
    }

    @Override
    protected int getWebLayoutId() {
        return R.layout.activity_information_detail;
    }

    private void initView() {
        myFiring = new MyFiring(this);
        urlConfig = new UrlConfig();
        Intent intent = getIntent();
        InformationItemsModel data = (InformationItemsModel) intent.getSerializableExtra(DATA);
        informationBean = (InformationBean) intent.getSerializableExtra("information");
        projectCode = data.getProjectCode();
        projectName = data.getProjectName();
        titleStr = data.getDetailName();
        collectType = data.getCollectType();
        objectId = data.getObjectId();

        webview = getWebView();

        if (informationBean != null && !informationBean.getDetailsTitle().equals("")) {
            setTitleString(informationBean.getDetailsTitle());
        } else if (titleStr != null && !titleStr.equals("")) {
            setTitleString(titleStr);
        } else {
            setTitleString("信息详情");
        }
        String url = "";
        int type;
        try{
            type = Integer.valueOf(collectType);
        }catch (Exception e){
            type = TYPE_PROJECT;
        }
        switch (type) {
            //招标
            case TYPE_TENDER:
                url = urlConfig.DETAIL_TENDER;
                break;
            //项目
            case TYPE_PROJECT:
                url = urlConfig.DETAIL_PROJECT;
                break;
            //ppp项目
            case TYPE_PPP:
                url = urlConfig.DETAIL_PPP;
                break;
            //采购
            case TYPE_PURCHASE:
                url = urlConfig.DETAIL_PURCHASE;
                break;
        }


        shareUrl = url + objectId;
        updateLoadUrl();

        //初始化收藏按钮
        if(checkLogin()){
            String userId = Constants.loginresultInfo.getUser().getUserId();
            myFiring.isCollect(userId, projectCode);
        }
    }

    private void updateLoadUrl() {
        if (Constants.loginresultInfo != null) {
            shareUrl += "&userId=" + Constants.loginresultInfo.getUser().getUserId();
        }
        webview.loadUrl(shareUrl);
    }

    @Subscribe
    public void onMainEventBus(LoginSuccessEvent event) {
        if (event == null || event.getUserBean() == null) {
            return;
        }
        isUpdate = true;
        updateLoadUrl();
    }

    private boolean checkLogin() {
        if (Constants.loginresultInfo != null && Constants.loginresultInfo.getUser() != null && Constants.loginresultInfo.getUser().getUserId() != null && !Constants.loginresultInfo.getUser().getUserId().equals("")) {
            return true;
        }
        return false;
    }

    private void collect(){
        if (!checkLogin()) {
            startActivity(new Intent(this, LoginActivity.class));
            StatisticsUtils.toLogin(StatisticsUtils.TYPE_TO_LOGIN_FAVORITE_INFO);
            return;
        }
        if (getRightSecondState()) {
            myFiring.deleteCollect(Constants.loginresultInfo.getUser().getUserId(), projectCode);
        } else {
            if (collectType != null && !collectType.equals("")) {
                myFiring.setCollect(Constants.loginresultInfo.getUser().getUserId(), projectCode, collectType);
            }
        }
    }

    @Override
    public void onIsCollectSuccess(CollectResultModel collectResultModel) {
        if (collectResultModel.getResCode().equals("0000")) {
            if (collectResultModel.isCollected()) {
                setRightSecondState(true);
            } else {
                setRightSecondState(false);
            }
        } else {
            ToastUtils.showShort(collectResultModel.getResMessage());
        }
    }

    @Override
    public void onSetCollectSuccess(BaseModel baseModel) {
        if (baseModel.getResCode().equals("0000")) {
            ToastUtils.showShort("收藏成功");
            setRightSecondState(true);
        } else {
            ToastUtils.showShort(baseModel.getResMessage());
        }
    }

    @Override
    public void onSetCollectFail(String msg) {
        Toast.makeText(this, "网络异常", Toast.LENGTH_SHORT).show();
    }

    @Override
    public void onDeleteCollectSuccess(BaseModel baseModel) {
        if (baseModel.getResCode().equals("0000")) {
            ToastUtils.showShort("取消收藏");
            setRightSecondState(false);
        } else {
            ToastUtils.showShort(baseModel.getResMessage());
        }
    }

    @Override
    public void onDeleteCollectFail(String error) {
        Toast.makeText(this, "网络异常", Toast.LENGTH_SHORT).show();
    }

    private void goBack() {
        finish();
    }

    @Override
    public void handleUpdateHistory(WebView view, String url, boolean isReload) {
        super.handleUpdateHistory(view, url, isReload);
        if (isUpdate) {
            view.clearHistory();
            isUpdate = false;
        }
    }


    @Override
    public void onBackPressedSupport() {
        if (webview.canGoBack()) {//当webview不是处于第一页面时，返回上一个页面
            webview.goBack();
            return ;
        } else {//当webview处于第一页面时,直接退出程序
            //    System.exit(0);
            goBack();
        }
        super.onBackPressedSupport();
    }

    @Override
    protected void onDestroy() {
        EventBus.getDefault().unregister(this);
        super.onDestroy();
    }

    @Override
    protected int getTitleString() {
        return 0;
    }
}
